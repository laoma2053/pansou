user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 2048;        # 增加到2048，匹配高并发需求
    multi_accept on;               # 允许worker同时接受多个连接
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 限流配置 - 基于高性能服务器调整
    limit_req_zone $binary_remote_addr zone=api_limit:20m rate=20r/m;    # 增加到每分钟20次
    limit_req_zone $binary_remote_addr zone=search_limit:20m rate=60r/m; # 增加到每分钟60次，匹配高并发
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 75;           # 增加连接保持时间
    keepalive_requests 1000;        # 每个连接最多处理1000个请求
    types_hash_max_size 2048;
    client_max_body_size 20m;       # 增加请求体大小限制
    
    # 高并发优化
    # worker_rlimit_nofile 65536;     # 增加文件描述符限制（在容器中可能受限）
    
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;             # 增加压缩缓冲区
    gzip_http_version 1.1;          # 优化HTTP版本
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    include /etc/nginx/conf.d/*.conf;
}
